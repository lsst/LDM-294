import csv
import glob
import os
import sys
from collections import OrderedDict

def get_products_for_wbs(productlist, wbs):
    # Return a list of product descriptions which match the specified WBS
    # element.
    products = []
    with open(productlist, "r") as csvfile:
        reader = csv.DictReader(csvfile)
        for row in reader:
            if row["WBS"] == wbs:
                products.append(row["Description"])
    return products

def get_wbs_descriptions(wbsdir):
    # Return an OrderedDict of WBS element to LaTeX-formatted description.

    def filename_to_wbs(wbs):
        # Drop the directory name and the ".tex" suffix.
        return os.path.basename(wbs)[:-4]

    def wbs_key(wbs):
        # Return a key suitable for sorting WBS elements.
        vals = filename_to_wbs(wbs)[6:].split(".")
        total = 0
        multiplier = 10.0
        for val in vals:
            # Increment by one to avoid 02C.04 and 02C.04.00 sorting as
            # equivalent
            total += (float(val) + 1.0) * multiplier
            multiplier /= 10
        return total

    texfiles = sorted(glob.glob(os.path.join(wbsdir, "*.tex")), key=wbs_key)
    wbs_descriptions = OrderedDict()
    for texfile in texfiles:
        with open(texfile, "r") as f:
            wbs_descriptions[filename_to_wbs(texfile)] = f.read()

    return wbs_descriptions

def format_products(products):
    # Return a LaTeX-formatted itemization of the products listed.
    if not products:
        output = "\nNo products are defined at this level of the WBS.\n\n"

    else:
        output = "\nThe following products (per \secref{sect:products}) are defined at this level of WBS:\n\n"
        output += "\\begin{itemize}\n"
        for product in products:
            output += "\\item{%s}\n" % (product,)
        output += "\end{itemize}\n\n"

    return output


if __name__ == "__main__":
    try:
        productlist = sys.argv[1]
    except IndexError:
        productlist = "productlist.csv"

    try:
        wbsdir = sys.argv[2]
    except IndexError:
        wbsdir = "wbs"

    try:
        output = sys.argv[3]
    except IndexError:
        output = "wbslist.tex"

    with open(output, "w") as out:
        out.write("% THIS FILE IS AUTOMATICALLY GENERATED: DO NOT EDIT\n\n")
        out.write("\\section{Proposed FY2018 WBS}\n")
        out.write("\\label{sec:wbslist}\n\n")
        for wbs, desc in get_wbs_descriptions(wbsdir).items():
            out.write(desc)
            out.write(format_products(get_products_for_wbs(productlist, wbs)))
